--global ... change settings on computer

[initialization of directory]
git init
git clone ... copy remote repository

[save change]
git add <file name>
git commit <file name> -m <message>

[check differences]
git diff ... check difference between 
git diff --staged

[check status]
git status

[check log]
git log
git log --oneline
git log -p <file name>
git log -n <commit number> ... get n commit log

[remove file or commit]
git rm <file name> ... completely delete file from current directory
git rm -r <directory name> ... completely delete file 
git rm --cached <file name> ... remove file  in repository but it still exist in worktree.

[remember file moving]
git mv <old file path> <new file path>

[upload changes on github]
git remote -v ... check <remote name> with url
git remote add origin <git url> ... registar github's url as origin by add option,so origin is an alias of url
git push <remote name> <branch name> ... origin->url pass's alias , master means branch
    ex: git push origin master
    ex: git remote add origin https://github.com/sodapop3535/00_tutorial.git
    ex: git push origin master\

git push -u <remote name> <git url>...Adding -u, git remember <remote name> <git url> , then you can sync repository by typing "git push"

[download repository]
git clone

[naming alias]
git config  --global alias.ci commit
git config  --global alias.st status
git config  --global alias.co checkout
git config  --global alias.br branch

[undo ... cancel changes before "git add"]
git checkout -- <file name>         ... cancel last file's change
git checkout -- <Directory name>    ... cancel all file's changes in specified Directory    
git checkout -- .                   ... cancel all file's changes

[unstage ... cancel changes on stages(after "git add" but before "git commit")]
git reset HEAD <filename>
git reset HEAD <directory>
git reset HEAD .

[substitute]
git commit --amend ... never use this after pushed(commit on the remote repository)

[git ]
1.git fetch <remote name>(ex:origin)...リモートリポジトリからダウンロードされローカルリポジトリ
に反映されるがワークツリー（最下層）には反映されない,ブランチが新しく作られる？
2.git merge <branch_name>... ワークツリーに反映させる
git branch -a ...check out all branches
git pull <remote name> <branch name>
git pull = git fetch + git merge

[show remote repository information]
git remote show origin

[change remote name]
git remote rename <old remote name> <new remote name>
[delete remote name]
git remote rm <remote name> ... delete remote config but not file in git hub

Branch and Merge
=======================================================================================
What for is branch?
-> to develop multiple functions at the same time

[create new branch]
git branch <branch_name>(ex:feature)

[change branch]
git checkout <branch_name>

git merge <branch name>
git merge <remote name / branch name> (ex: git merge origin/master)

Resolve conflict
=======================================================================================
git commit -i <filename> -m <message>

change branch name=====================================================================
git branch -m <new branch name>
git branch -d <branch name>

[rebase]===============================================================================
git rebase <branch name>
...変更履歴を整える．親コミットを別のブランチのコミットに変更する．
つまり，あるブランチの変更が別のブランチに取り込まれる(これはマージと同じ)

on feature branch...
git checkout feature
git rebase master ... master branchの内容を取り込む

on master branch...
git checkout master
git merge feature ... masterとfeatureが指し示すコミット（HEAD）を統一する

※githubにpushしたコミットをリベースしない！！！！！
->親コミットが変更されるため
->git push -fはNG!!!!!!

git pull --rebase ... ただ最新の内容を取得したいとき
or git fetch + git rebase
